import { korean } from '..';

describe('@curong/regexp/korean', () => {
    const hangulRegex = new RegExp(korean);

    test('should match valid Hangul characters', () => {
        // ÊµãËØïÊúâÊïàÁöÑÈü©ÊñáÂ≠óÁ¨¶
        const validHangul = [
            'Í∞Ä', // Èü©ÊñáÂ≠óÁ¨¶
            'Ìïú', // Èü©ÊñáÂ≠óÁ¨¶
            'Í∏Ä', // Èü©ÊñáÂ≠óÁ¨¶
            'Ïïà', // Èü©ÊñáÂ≠óÁ¨¶
            'ÎÖï', // Èü©ÊñáÂ≠óÁ¨¶
            'Ìïò', // Èü©ÊñáÂ≠óÁ¨¶
            'ÏÑ∏Ïöî', // Èü©ÊñáÂ≠óÁ¨¶ÔºàÁªÑÂêàÔºâ
            'Ïó¨', // Èü©ÊñáÂ≠óÁ¨¶
            'Ìñâ', // Èü©ÊñáÂ≠óÁ¨¶
            'Ïù¥', // Èü©ÊñáÂ≠óÁ¨¶
            'Îèã' // Èü©ÊñáÂ≠óÁ¨¶
        ];

        validHangul.forEach(char => {
            expect(hangulRegex.test(char)).toBe(true);
        });
    });

    test('should not match invalid characters', () => {
        // ÊµãËØïÊó†ÊïàÁöÑÂ≠óÁ¨¶
        const invalidCharacters = [
            'A', // Êãâ‰∏ÅÂ≠óÊØç
            '1', // Êï∞Â≠ó
            ' ', // Á©∫Ê†º
            'Ê±â', // Ê±âÂ≠ó
            'üòä', // Ë°®ÊÉÖÁ¨¶
            '\u200B', // Èõ∂ÂÆΩÁ©∫Ê†º
            '!', // ÊÑüÂèπÂè∑
            '@' // Ôº†Á¨¶
        ];

        invalidCharacters.forEach(char => {
            expect(hangulRegex.test(char)).toBe(false);
        });
    });

    test('should match strings with mixed characters', () => {
        // ÊµãËØïÂåÖÂê´Èü©ÊñáÂ≠óÁ¨¶ÁöÑÊ∑∑ÂêàÂ≠óÁ¨¶‰∏≤
        const mixedStrings = [
            'Hello Í∞ÄÏÑ∏Ïöî', // ÂåÖÂê´Èü©ÊñáÂ≠óÁ¨¶
            'ÏïàÎÖïÌïòÏÑ∏Ïöî', // ‰ªÖÈü©Êñá
            'A Í∞Ä B', // ÂåÖÂê´Èü©ÊñáÂ≠óÁ¨¶
            'This is a ÌÖåÏä§Ìä∏' // ÂåÖÂê´Èü©ÊñáÂ≠óÁ¨¶
        ];

        mixedStrings.forEach(str => {
            expect(hangulRegex.test(str)).toBe(true);
        });
    });

    test('should not match strings with no Hangul characters', () => {
        // ÊµãËØïÊ≤°ÊúâÈü©ÊñáÂ≠óÁ¨¶ÁöÑÂ≠óÁ¨¶‰∏≤
        const noHangulStrings = [
            'Hello World', // ‰ªÖÊãâ‰∏ÅÂ≠óÊØç
            '123456', // ‰ªÖÊï∞Â≠ó
            'Ê±âÂ≠óÊµãËØï', // ‰ªÖÊ±âÂ≠ó
            'üòäüòäüòä', // ‰ªÖË°®ÊÉÖÁ¨¶Âè∑
            ' ', // ‰ªÖÁ©∫Ê†º
            '!!!' // ‰ªÖÊ†áÁÇπ
        ];

        noHangulStrings.forEach(str => {
            expect(hangulRegex.test(str)).toBe(false);
        });
    });

    test('should match edge cases', () => {
        expect(hangulRegex.test('')).toBe(false); // Á©∫Â≠óÁ¨¶‰∏≤
        expect(hangulRegex.test('\n')).toBe(false); // Êç¢Ë°åÁ¨¶
        expect(hangulRegex.test('\t')).toBe(false); // Âà∂Ë°®Á¨¶
    });
});
